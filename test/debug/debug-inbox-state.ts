import { config } from 'dotenv';
import { GmailHandler } from '../src/gmail.js';

config();

async function debugInboxState() {
  console.log('=== INBOXÁä∂ÊÖã„Éá„Éê„ÉÉ„Ç∞ ===');
  
  const gmail = new GmailHandler();
  
  try {
    // 1. INBOXÂÜÖ„ÅÆ„É°„Éº„É´‰∏ÄË¶ßÔºàË©≥Á¥∞Ôºâ
    console.log('1. INBOXÂÜÖ„ÅÆ„É°„Éº„É´‰∏ÄË¶ß...');
    const inboxEmails = await gmail.listEmails('kentaroisp', { limit: 5 });
    
    console.log(`üìä INBOXÂÜÖ„É°„Éº„É´Êï∞: ${inboxEmails.length}`);
    inboxEmails.forEach((email, i) => {
      console.log(`${i+1}. ID: ${email.id}`);
      console.log(`   ‰ª∂Âêç: ${email.subject.substring(0, 50)}...`);
      console.log(`   Êú™Ë™≠: ${email.isUnread}`);
      console.log('');
    });
    
    // 2. ÁâπÂÆö„ÅÆ„É°„Éº„É´IDÊ§úÁ¥¢
    const targetId = '197ab9f965c194b0';
    console.log(`\n2. ÁâπÂÆö„É°„Éº„É´Ê§úÁ¥¢ (ID: ${targetId})...`);
    
    try {
      const searchResult = await gmail.searchEmails('kentaroisp', `rfc822msgid:${targetId}`, 1);
      console.log(`Ê§úÁ¥¢ÁµêÊûúÊï∞: ${searchResult.length}`);
      
      if (searchResult.length > 0) {
        console.log(`‚úÖ „É°„Éº„É´Ë¶ã„Å§„Åã„Çä„Åæ„Åó„Åü: ${searchResult[0].subject}`);
      } else {
        console.log(`‚ùå „É°„Éº„É´„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì`);
      }
    } catch (error) {
      console.log(`‚ùå Ê§úÁ¥¢„Ç®„É©„Éº: ${error}`);
    }
    
    // 3. Êú™Ë™≠„É°„Éº„É´‰∏ÄË¶ß
    console.log(`\n3. Êú™Ë™≠„É°„Éº„É´‰∏ÄË¶ß...`);
    const unreadEmails = await gmail.searchEmails('kentaroisp', 'is:unread', 10);
    console.log(`üìä Êú™Ë™≠„É°„Éº„É´Êï∞: ${unreadEmails.length}`);
    
    unreadEmails.forEach((email, i) => {
      console.log(`${i+1}. ID: ${email.id}`);
      console.log(`   ‰ª∂Âêç: ${email.subject.substring(0, 50)}...`);
      console.log('');
    });
    
    // 4. „Ç¢„Éº„Ç´„Ç§„Éñ„Åï„Çå„Åü„É°„Éº„É´Ê§úÁ¥¢
    console.log(`\n4. „Ç¢„Éº„Ç´„Ç§„Éñ„É°„Éº„É´Ê§úÁ¥¢...`);
    const archivedEmails = await gmail.searchEmails('kentaroisp', '-in:inbox', 5);
    console.log(`üìä „Ç¢„Éº„Ç´„Ç§„Éñ„É°„Éº„É´Êï∞: ${archivedEmails.length}`);
    
    archivedEmails.forEach((email, i) => {
      console.log(`${i+1}. ID: ${email.id}`);
      console.log(`   ‰ª∂Âêç: ${email.subject.substring(0, 50)}...`);
      console.log('');
    });
    
  } catch (error) {
    console.log('‚ùå ‰æãÂ§ñ„Ç®„É©„Éº:', error instanceof Error ? error.message : 'Unknown error');
  }
}

debugInboxState().catch(console.error); 